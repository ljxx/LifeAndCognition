apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

def config = rootProject.ext.android
def librarys = rootProject.ext.dependencies

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

    }

    //解决String.xml文件中的名称爆红的问题
//    lintOptions{
//        disable 'MissingTranslation'
//    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api librarys.appcompatV7
    api librarys.constraint
    api librarys.design
    testImplementation librarys.junit
    androidTestImplementation librarys.runner
    androidTestImplementation librarys.espresso
    //第三方库
    api librarys.butterknife
    annotationProcessor librarys.butterknifeCompiler
    //解决冲突
    api(librarys.arouterApi) {
        exclude module: 'support-v4'
    }
    annotationProcessor librarys.arouterCompiler
    api librarys.rxjava2
    api librarys.rxandroid2
    api librarys.retrofit2
    api librarys.converterGson
    api librarys.converterScalars
    api librarys.adapterRxjava
    api librarys.loggingInterceptor

    api librarys.glide
    annotationProcessor librarys.glideCompiler

    api librarys.dagger2
    annotationProcessor librarys.daggerCompiler2

    api librarys.BaseRecyclerViewAdapterHelper

    api librarys.jetpackPagingRuntime
    annotationProcessor librarys.jetpackPagingCommon
    api librarys.jetpackPagingRxjava2
}
